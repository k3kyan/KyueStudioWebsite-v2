Transform: AWS::Serverless-2016-10-31
Resources:
  ContactFormMessages:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  BlogPostsMetadata:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  KyueStudioWebsiteS3BucketV2:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub kyuestudio-content-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
  KyueStudioLambdaFunctionV2:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: KyueStudioLambdaFunctionV2
      CodeUri: s3://kyuestudiowebsite/kyue-studio-backend/backend.zip # ?? !Ref KyueStudioWebsiteS3BucketV2 ??
      Handler: main.handler
      Runtime: python3.13
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      FunctionUrlConfig:
        AuthType: NONE
        Cors:
          AllowOrigins:
            - '*'
          # MAY OR MAY NOT NEED THESE ??!!??!?! Works on manually made lambda function with only "Allow origin" = *, so these other cors configs may not be needed. delete if something goes wrong maybe.
          AllowHeaders:
            - '*'
          ExposeHeaders:
            - '*'
          AllowMethods:
            - '*'
      Environment:
        Variables:
          CONTACTFORMMESSAGES_TABLE_NAME: !Ref ContactFormMessages
          CONTACTFORMMESSAGES_TABLE_ARN: !GetAtt ContactFormMessages.Arn
          BLOGPOSTSMETADATA_TABLE_NAME: !Ref BlogPostsMetadata
          BLOGPOSTSMETADATA_TABLE_ARN: !GetAtt BlogPostsMetadata.Arn
          ADMIN_USERNAME: tempUsernameEV
          ADMIN_PASSWORD: tempPasswordEV
          SECRET_KEY: 725898e2e6208a094e60f59ebf97b32940f4902b1ffe606be5f67dc89cf74ee0
          ALGORITHM: HS256
          ACCESS_TOKEN_EXPIRE_MINUTES: 30
          ENV_MODE: aws
          KYUESTUDIOWEBSITES3BUCKETV2_BUCKET_NAME: !Ref KyueStudioWebsiteS3BucketV2
          KYUESTUDIOWEBSITES3BUCKETV2_BUCKET_ARN: !GetAtt KyueStudioWebsiteS3BucketV2.Arn
          # LAMBDA_API_URL: !GetAtt KyueStudioLambdaFunctionV2.FunctionUrl
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ContactFormMessages
        - DynamoDBCrudPolicy:
            TableName: !Ref BlogPostsMetadata
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${KyueStudioWebsiteS3BucketV2}
                - !Sub arn:${AWS::Partition}:s3:::${KyueStudioWebsiteS3BucketV2}/*
  KyueStudioLambdaFunctionV2UrlPermission: # ???? is this valid ????
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref KyueStudioLambdaFunctionV2
      Principal: "*"
      FunctionUrlAuthType: NONE
  KyueStudioLambdaFunctionV2LogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${KyueStudioLambdaFunctionV2}

# Outputs:
#   LambdaFunctionUrl:
#     Description: Public URL for FastAPI Lambda function
#     Value: !GetAtt KyueStudioLambdaFunctionV2.FunctionUrl
#     Export:
#       Name: KyueStudioLambdaFunctionUrl


# Outputs:
#   KyueStudioLambdaFunctionUrl:
#     Description: The public Function URL of the FastAPI Lambda
#     Value: !GetAtt KyueStudioLambdaFunctionV2.FunctionUrl
#     Export:
#       Name: KyueStudioLambdaFunctionUrl
